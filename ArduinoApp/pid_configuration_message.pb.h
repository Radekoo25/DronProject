/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6 */

#ifndef PB_PID_CONFIGURATION_MESSAGE_PB_H_INCLUDED
#define PB_PID_CONFIGURATION_MESSAGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _PIDConfigurationMessage { 
    int32_t yaw_kp;
    int32_t yaw_ki;
    int32_t yaw_kd;
    int32_t pitch_kp;
    int32_t pitch_ki;
    int32_t pitch_kd;
    int32_t roll_kp;
    int32_t roll_ki;
    int32_t roll_kd;
} PIDConfigurationMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define PIDConfigurationMessage_init_default     {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define PIDConfigurationMessage_init_zero        {0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define PIDConfigurationMessage_yaw_kp_tag       1
#define PIDConfigurationMessage_yaw_ki_tag       2
#define PIDConfigurationMessage_yaw_kd_tag       3
#define PIDConfigurationMessage_pitch_kp_tag     4
#define PIDConfigurationMessage_pitch_ki_tag     5
#define PIDConfigurationMessage_pitch_kd_tag     6
#define PIDConfigurationMessage_roll_kp_tag      7
#define PIDConfigurationMessage_roll_ki_tag      8
#define PIDConfigurationMessage_roll_kd_tag      9

/* Struct field encoding specification for nanopb */
#define PIDConfigurationMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    yaw_kp,            1) \
X(a, STATIC,   SINGULAR, INT32,    yaw_ki,            2) \
X(a, STATIC,   SINGULAR, INT32,    yaw_kd,            3) \
X(a, STATIC,   SINGULAR, INT32,    pitch_kp,          4) \
X(a, STATIC,   SINGULAR, INT32,    pitch_ki,          5) \
X(a, STATIC,   SINGULAR, INT32,    pitch_kd,          6) \
X(a, STATIC,   SINGULAR, INT32,    roll_kp,           7) \
X(a, STATIC,   SINGULAR, INT32,    roll_ki,           8) \
X(a, STATIC,   SINGULAR, INT32,    roll_kd,           9)
#define PIDConfigurationMessage_CALLBACK NULL
#define PIDConfigurationMessage_DEFAULT NULL

extern const pb_msgdesc_t PIDConfigurationMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define PIDConfigurationMessage_fields &PIDConfigurationMessage_msg

/* Maximum encoded size of messages (where known) */
#define PIDConfigurationMessage_size             99

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
